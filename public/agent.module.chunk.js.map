{"version":3,"sources":["/home/tier5/Projects/web/3c/resources/assets/frontend/src/app/core/layout/inner-pages/agent/agent-routing.module.ts","/home/tier5/Projects/web/3c/resources/assets/frontend/src/app/core/layout/inner-pages/agent/agent.module.ts","/home/tier5/Projects/web/3c/resources/assets/frontend/src/app/core/layout/inner-pages/agent/create-agent/create-agent.component.css","/home/tier5/Projects/web/3c/resources/assets/frontend/src/app/core/layout/inner-pages/agent/create-agent/create-agent.component.html","/home/tier5/Projects/web/3c/resources/assets/frontend/src/app/core/layout/inner-pages/agent/create-agent/create-agent.component.ts","/home/tier5/Projects/web/3c/resources/assets/frontend/src/app/core/layout/inner-pages/agent/list-agent/list-agent.component.css","/home/tier5/Projects/web/3c/resources/assets/frontend/src/app/core/layout/inner-pages/agent/list-agent/list-agent.component.html","/home/tier5/Projects/web/3c/resources/assets/frontend/src/app/core/layout/inner-pages/agent/list-agent/list-agent.component.ts"],"names":[],"mappings":"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","file":"agent.module.chunk.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { CreateAgentComponent } from './create-agent/create-agent.component'\nimport { ListAgentComponent } from './list-agent/list-agent.component'\n\nconst routes: Routes = [\n  { path: 'create', component: CreateAgentComponent, data: { editMode: false } },\n  { path: 'list', component: ListAgentComponent },\n  { path: 'edit/:id', component: CreateAgentComponent, data: { editMode: true } },\n  { path: '**', redirectTo: 'list' }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class AgentRoutingModule { }\n\n\n\n// WEBPACK FOOTER //\n// /home/tier5/Projects/web/3c/resources/assets/frontend/src/app/core/layout/inner-pages/agent/agent-routing.module.ts","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from \"@angular/forms\";\nimport { TextMaskModule } from 'angular2-text-mask'\n\nimport { AgentRoutingModule } from './agent-routing.module';\nimport { CreateAgentComponent } from './create-agent/create-agent.component';\nimport { ListAgentComponent } from './list-agent/list-agent.component';\nimport { SharedModule } from '../../../shared/shared.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    AgentRoutingModule,\n    FormsModule,\n    TextMaskModule,\n    SharedModule\n  ],\n  declarations: [\n    CreateAgentComponent,\n    ListAgentComponent\n  ]\n})\nexport class AgentModule { }\n\n\n\n// WEBPACK FOOTER //\n// /home/tier5/Projects/web/3c/resources/assets/frontend/src/app/core/layout/inner-pages/agent/agent.module.ts","exports = module.exports = require(\"../../../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/tier5/Projects/web/3c/resources/assets/frontend/src/app/core/layout/inner-pages/agent/create-agent/create-agent.component.css\n// module id = ../../../../../src/app/core/layout/inner-pages/agent/create-agent/create-agent.component.css\n// module chunks = agent.module","module.exports = \"<div class=\\\"content-wrapper\\\">\\n  <section class=\\\"content-header\\\">\\n    <h1>Agent Section</h1>\\n    <ol class=\\\"breadcrumb\\\">\\n      <li><a href=\\\"#\\\"><i class=\\\"fa fa-dashboard\\\"></i> Home</a></li>\\n      <li><a href=\\\"#\\\">Tables</a></li>\\n      <li class=\\\"active\\\">Data tables</li>\\n    </ol>\\n  </section>\\n  <section class=\\\"content\\\">\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-xs-12\\\">\\n        <div class=\\\"box box-primary\\\">\\n          <!-- /.box-header -->\\n          <div class=\\\"box-body\\\" *ngIf=\\\"(authState | async).twilioIsActive\\\">\\n            <form #form=\\\"ngForm\\\" (submit)=\\\"onSubmit(form)\\\">\\n              <!-- text input -->\\n              <div class=\\\"box-header with-border\\\">\\n                <h3 class=\\\"box-title\\\">{{ editMode ? 'Edit': 'Create' }} Agent</h3>\\n              </div>\\n              <div class=\\\"row\\\">\\n                <div class=\\\"col-md-6\\\">\\n                    <div class=\\\"form-group\\\">\\n                      <label class=\\\"control-label\\\" for=\\\"admin\\\">\\n                        Admin for Agent\\n                      </label>\\n                      <select class=\\\"form-control\\\"\\n                              id=\\\"admin\\\"\\n                              name=\\\"parentId\\\"\\n                              [disabled]=\\\"editMode || (authState | async).isAdmin\\\"\\n                              #selectedAdmin\\n                              [ngModel]=\\\"agent.parentId\\\"\\n                              (change)=\\\"adminChanged(selectedAdmin.value)\\\"\\n                              required\\n                      >\\n                        <option selected value=\\\"0\\\">Choose...</option>\\n                        <option [value]=\\\"item.id\\\"\\n                                *ngFor=\\\"let item of (afterLoginState | async).admin.list; let i = index\\\"\\n                        >\\n                          {{item.first_name}} {{item.last_name}}\\n                        </option>\\n                      </select>\\n                    </div>\\n                </div>\\n\\n                <div class=\\\"col-md-6\\\" *ngIf=\\\"selectedAdmin.value > 0\\\">\\n                    <div class=\\\"form-group\\\">\\n                    <label class=\\\"control-label\\\" for=\\\"department\\\">\\n                      Department for Agent\\n                    </label>\\n                    <select class=\\\"form-control\\\"\\n                            id=\\\"department\\\"\\n                            name=\\\"departmentId\\\"\\n                            [disabled]=\\\"editMode\\\"\\n                            #selectedDepartment\\n                            [ngModel]=\\\"agent.departmentId\\\"\\n                            (change)=\\\"deptChanged(selectedDepartment.value)\\\"\\n                            required\\n                    >\\n                      <option selected value=\\\"0\\\">Choose...</option>\\n                      <option [value]=\\\"item.id\\\"\\n                              *ngFor=\\\"let item of (afterLoginState | async).department.list; let i = index\\\"\\n                      >\\n                        {{item.department_name}}\\n                      </option>\\n                    </select>\\n                  </div>\\n                </div>\\n\\n              </div>\\n\\n              <div class=\\\"row\\\" *ngIf=\\\"selectDept\\\">\\n                <div class=\\\"col-md-6\\\">\\n                  <div class=\\\"form-group\\\" [ngClass]=\\\"(firstName.invalid && firstName.touched) ? 'has-error': ''\\\">\\n                    <label class=\\\"control-label\\\" for=\\\"firstName\\\">First Name\\n                      <i *ngIf=\\\"firstName.invalid && firstName.touched\\\" class=\\\"fa fa-times-circle-o\\\"></i>\\n                    </label>\\n                    <input type=\\\"text\\\"\\n                           class=\\\"form-control\\\"\\n                           id=\\\"firstName\\\"\\n                           name=\\\"firstName\\\"\\n                           [ngModel]=\\\"agent.firstName\\\"\\n                           #firstName=\\\"ngModel\\\"\\n                           required\\n                           placeholder=\\\"First Name\\\"\\n                    >\\n                    <span *ngIf=\\\"firstName.invalid && firstName.touched\\\" class=\\\"help-block\\\">Your First Name is Required !</span>\\n                  </div>\\n                </div>\\n                <div class=\\\"col-md-6\\\">\\n                  <div class=\\\"form-group\\\" [ngClass]=\\\"(lastName.invalid && lastName.touched) ? 'has-error': ''\\\">\\n                    <label class=\\\"control-label\\\" for=\\\"lastName\\\">Last Name\\n                      <i *ngIf=\\\"lastName.invalid && lastName.touched\\\" class=\\\"fa fa-times-circle-o\\\"></i>\\n                    </label>\\n                    <input type=\\\"text\\\"\\n                           class=\\\"form-control\\\"\\n                           id=\\\"lastName\\\"\\n                           name=\\\"lastName\\\"\\n                           [ngModel]=\\\"agent.lastName\\\"\\n                           #lastName=\\\"ngModel\\\"\\n                           required\\n                           placeholder=\\\"Last Name\\\"\\n                    >\\n                    <span *ngIf=\\\"lastName.invalid && lastName.touched\\\" class=\\\"help-block\\\">Your Last Name is Required !</span>\\n                  </div>\\n                </div>\\n              </div>\\n\\n              <div class=\\\"row\\\" *ngIf=\\\"selectDept\\\">\\n                <div class=\\\"col-md-6\\\">\\n                  <div class=\\\"form-group\\\" [ngClass]=\\\"(email.invalid && email.touched) ? 'has-error': ''\\\">\\n                    <label class=\\\"control-label\\\" for=\\\"email\\\">Email\\n                      <i *ngIf=\\\"email.invalid && email.touched\\\" class=\\\"fa fa-times-circle-o\\\"></i>\\n                    </label>\\n                    <input type=\\\"email\\\"\\n                           class=\\\"form-control\\\"\\n                           id=\\\"email\\\"\\n                           name=\\\"email\\\"\\n                           [ngModel]=\\\"agent.email\\\"\\n                           #email=\\\"ngModel\\\"\\n                           email\\n                           required\\n                           [disabled]=\\\"editMode\\\"\\n                           placeholder=\\\"email\\\"\\n                    >\\n                    <span *ngIf=\\\"email.invalid && email.touched && form.controls.email?.errors.email\\\" class=\\\"help-block\\\">Please Enter a Proper Email Address!</span>\\n                    <span *ngIf=\\\"email.invalid && email.touched && form.controls.email?.errors.required\\\" class=\\\"help-block\\\">Your Email Address is Required!</span>\\n                  </div>\\n                </div>\\n                <div class=\\\"col-md-6\\\">\\n                  <div class=\\\"form-group\\\" [ngClass]=\\\"(userName.invalid && userName.touched) ? 'has-error': ''\\\">\\n                    <label class=\\\"control-label\\\" for=\\\"userName\\\">Username\\n                      <i *ngIf=\\\"userName.invalid && userName.touched\\\" class=\\\"fa fa-times-circle-o\\\"></i>\\n                    </label>\\n                    <input type=\\\"text\\\"\\n                           class=\\\"form-control\\\"\\n                           id=\\\"userName\\\"\\n                           placeholder=\\\"Username\\\"\\n                           [ngModel]=\\\"agent.userName\\\"\\n                           name=\\\"userName\\\"\\n                           required\\n                           ngModel\\n                           #userName=\\\"ngModel\\\"\\n                    >\\n                    <span *ngIf=\\\"userName.invalid && userName.touched\\\" class=\\\"help-block\\\">Your Username is Required !</span>\\n                  </div>\\n                </div>\\n              </div>\\n\\n              <div class=\\\"row\\\" *ngIf=\\\"selectDept\\\">\\n                <div class=\\\"col-md-6\\\">\\n                  <div class=\\\"form-group\\\" [ngClass]=\\\"(phone.invalid && phone.touched) ? 'has-error': ''\\\">\\n                    <label class=\\\"control-label\\\" for=\\\"phone\\\">Phone\\n                      <i *ngIf=\\\"phone.invalid && phone.touched\\\" class=\\\"fa fa-times-circle-o\\\"></i>\\n                    </label>\\n                    <input type=\\\"text\\\"\\n                           class=\\\"form-control\\\"\\n                           [textMask]=\\\"{mask: mask, guide: false}\\\"\\n                           id=\\\"phone\\\"\\n                           placeholder=\\\"phone\\\"\\n                           [ngModel]=\\\"agent.phone\\\"\\n                           name=\\\"phone\\\"\\n                           required\\n                           ngModel\\n                           #phone=\\\"ngModel\\\"\\n                    >\\n                    <span *ngIf=\\\"phone.invalid && phone.touched\\\" class=\\\"help-block\\\">Your Phone Number is Required !</span>\\n                  </div>\\n                </div>\\n                <div class=\\\"col-md-6\\\">\\n\\n                </div>\\n              </div>\\n\\n              <div class=\\\"col-md-12\\\">\\n                <div class=\\\"box-footer\\\">\\n                  <button type=\\\"submit\\\" [disabled]=\\\"form.invalid || !selectDept\\\" class=\\\"btn btn-primary pull-right\\\" >Submit</button>\\n                </div>\\n              </div>\\n            </form>\\n          </div>\\n          <div class=\\\"box-body\\\" *ngIf=\\\"!(authState | async).twilioIsActive\\\">\\n            <h4>Twilio Credentials Not Added by SuperAdmin :-(</h4>\\n          </div>\\n          <!-- /.box-body -->\\n        </div>\\n      </div>\\n      <!-- /.col -->\\n    </div>\\n    <!-- /.row -->\\n  </section>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/tier5/Projects/web/3c/resources/assets/frontend/src/app/core/layout/inner-pages/agent/create-agent/create-agent.component.html\n// module id = ../../../../../src/app/core/layout/inner-pages/agent/create-agent/create-agent.component.html\n// module chunks = agent.module","import { ActivatedRoute, Data } from '@angular/router';\nimport { AfterViewChecked, ChangeDetectorRef, Component, OnDestroy, OnInit, ViewChild } from '@angular/core'\nimport { NgForm } from '@angular/forms';\nimport { Store } from '@ngrx/store';\nimport { Observable } from 'rxjs/Observable';\nimport { Subscription } from 'rxjs/Subscription';\nimport 'rxjs/add/operator/distinctUntilChanged';\n\nimport * as AdminActions from '../../../store/admin/admin.actions';\nimport * as AgentActions from '../../../store/agent/agent.actions';\nimport * as DepartmentActions from '../../../store/department/department.actions';\nimport * as fromAuth from '../../../../store/auth/auth.reducers';\nimport * as fromAfterLogin from '../../../store/after-login.reducers';\n\n@Component({\n  selector: 'app-create-agent',\n  templateUrl: './create-agent.component.html',\n  styleUrls: ['./create-agent.component.css']\n})\nexport class CreateAgentComponent implements OnInit, AfterViewChecked, OnDestroy {\n\n    /** Variable Declaration */\n    @ViewChild('form') form: NgForm;\n    authState: Observable<fromAuth.State>;\n    afterLoginState: Observable<fromAfterLogin.FeatureState>;\n    afterLoginSubscription: Subscription;\n    authSubscription: Subscription;\n    editMode: boolean = false;\n    userId: number;\n    updateAgent: any;\n    selectAdmin: boolean = false;\n    selectDept: boolean = false;\n\n    mask: Array<string | RegExp> = ['(', /[1-9]/, /\\d/, /\\d/, ')', ' ', /\\d/, /\\d/, /\\d/, '-', /\\d/, /\\d/, /\\d/, /\\d/];\n    loggedInAdminId: number;\n    agent = {\n      userId: 0,\n      parentId: 0,\n      departmentId: 0,\n      firstName: '',\n      lastName: '',\n      email: '',\n      userName: '',\n      phone: ''\n    };\n\n    departments : any;\n\n\n    /** Service injection */\n    constructor(private store: Store<fromAfterLogin.AfterLoginFeatureState>,\n                private activatedRoute: ActivatedRoute,\n                private cdr: ChangeDetectorRef) { }\n\n    /** Function to be executed when component initializes */\n    ngOnInit() {\n      this.store.dispatch(new AdminActions.GetAdminListAttempt());\n      this.authState = this.store.select('auth');\n      this.afterLoginState = this.store.select('afterLogin');\n\n      this.authSubscription = this.store.select('auth')\n        .subscribe(\n          (data) => {\n            if(data.isAdmin) {\n              this.agent.parentId = data.userId;\n              this.loggedInAdminId = data.userId;\n              this.store.dispatch(new DepartmentActions.GetDepartmentListAttempt({userId: data.userId}));\n            }\n          }\n        );\n\n        this.activatedRoute.data\n          .subscribe(\n            (data: Data) => {\n              this.editMode = data['editMode'];\n              if(this.editMode) {\n                /** Perform operation is present mode is edit mode */\n                this.selectDept = true;\n                this.userId = this.activatedRoute.snapshot.params['id'];\n                this.store.dispatch(new AgentActions.GetToEditAgentAttempt({agentId: this.userId}));\n                this.updateAgent = this.store.select('afterLogin')\n                  .map(data => data.agent.toEdit)\n                  .distinctUntilChanged()\n                  .subscribe(\n                  (agent) => {\n                      if (agent) {\n                        this.store.dispatch(new DepartmentActions.GetDepartmentListAttempt({userId: agent.parent_id}));\n                        this.agent.parentId = agent.parent_id;\n                        this.agent.firstName = agent.first_name;\n                        this.agent.lastName = agent.last_name;\n                        this.agent.userName = agent.username;\n                        this.agent.email = agent.email;\n                        this.agent.phone = agent.phone;\n                        this.agent.departmentId = agent.department_id;\n                      }\n                    }\n                  );\n                  this.selectAdmin = true;\n              }\n            }\n        );\n        this.afterLoginSubscription = this.store.select('afterLogin')\n          .map(data => data.agent.resetAgentForm)\n          .subscribe(\n            (data) => {\n              if(data) {\n                this.form.reset();\n                this.selectDept = false;\n                this.store.dispatch(new AgentActions.ResetAgentForm());\n                if(!!this.loggedInAdminId) {\n                  this.form.form.patchValue({ parentId: this.loggedInAdminId, departmentId: 0 });\n                }\n              }\n            }\n          );\n    }\n\n    ngAfterViewChecked() {\n      this.cdr.detectChanges();\n    }\n\n    /** Function call to create or edit a admin */\n    onSubmit(form: NgForm) {\n      if(this.editMode) {\n        const data = { ...form.value, userId: this.userId };\n        this.store.dispatch(new AgentActions.EditAgentAttempt({...data}));\n      } else {\n        this.store.dispatch(new AgentActions.AddAgentAttempt(form.value));\n      }\n    }\n\n    /** Un-subscribing from all custom made events when component is destroyed */\n    ngOnDestroy() {\n      this.afterLoginSubscription.unsubscribe();\n      this.authSubscription.unsubscribe();\n    }\n\n    /** Function to fetch department list with respect to adminId/userId */\n    adminChanged(id: number) {\n      if (!!id) {\n        this.store.dispatch(new DepartmentActions.GetDepartmentListAttempt({userId: id}));\n      }\n    }\n\n    /** Function to check if valid department is selected */\n    deptChanged(id: number) {\n      this.selectDept = id > 0;\n    }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/tier5/Projects/web/3c/resources/assets/frontend/src/app/core/layout/inner-pages/agent/create-agent/create-agent.component.ts","exports = module.exports = require(\"../../../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/tier5/Projects/web/3c/resources/assets/frontend/src/app/core/layout/inner-pages/agent/list-agent/list-agent.component.css\n// module id = ../../../../../src/app/core/layout/inner-pages/agent/list-agent/list-agent.component.css\n// module chunks = agent.module","module.exports = \"<div class=\\\"content-wrapper\\\">\\n  <section class=\\\"content-header\\\">\\n    <h1>Agent List</h1>\\n    <ol class=\\\"breadcrumb\\\">\\n      <li><a href=\\\"#\\\"><i class=\\\"fa fa-dashboard\\\"></i> Home</a></li>\\n      <li><a href=\\\"#\\\">Tables</a></li>\\n      <li class=\\\"active\\\">Data tables</li>\\n    </ol>\\n  </section>\\n  <section class=\\\"content\\\">\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-xs-12\\\">\\n        <div class=\\\"box\\\">\\n          <div class=\\\"box-header\\\">\\n            <h3 class=\\\"box-title\\\">Agent List</h3>\\n          </div>\\n          <!-- /.box-header -->\\n          <div class=\\\"box-body\\\">\\n            <div id=\\\"example2_wrapper\\\" class=\\\"dataTables_wrapper form-inline dt-bootstrap\\\"><div class=\\\"row\\\"><div class=\\\"col-sm-6\\\"></div><div class=\\\"col-sm-6\\\"></div></div><div class=\\\"row\\\"><div class=\\\"col-sm-12\\\"><table id=\\\"example2\\\" class=\\\"table table-bordered table-hover dataTable\\\" role=\\\"grid\\\" aria-describedby=\\\"example2_info\\\">\\n              <thead>\\n              <tr role=\\\"row\\\">\\n                <th class=\\\"sorting\\\" tabindex=\\\"0\\\" aria-controls=\\\"example2\\\" rowspan=\\\"1\\\" colspan=\\\"1\\\" aria-label=\\\"Rendering engine: activate to sort column ascending\\\">#</th>\\n                <th class=\\\"sorting\\\" tabindex=\\\"0\\\" aria-controls=\\\"example2\\\" rowspan=\\\"1\\\" colspan=\\\"1\\\" aria-label=\\\"Rendering engine: activate to sort column ascending\\\">First Name</th>\\n                <th class=\\\"sorting_desc\\\" tabindex=\\\"0\\\" aria-controls=\\\"example2\\\" rowspan=\\\"1\\\" colspan=\\\"1\\\" aria-label=\\\"Browser: activate to sort column ascending\\\" aria-sort=\\\"descending\\\">Last Name</th>\\n                <th class=\\\"sorting\\\" tabindex=\\\"0\\\" aria-controls=\\\"example2\\\" rowspan=\\\"1\\\" colspan=\\\"1\\\" aria-label=\\\"Platform(s): activate to sort column ascending\\\">Username</th>\\n                <th class=\\\"sorting\\\" tabindex=\\\"0\\\" aria-controls=\\\"example2\\\" rowspan=\\\"1\\\" colspan=\\\"1\\\" aria-label=\\\"Engine version: activate to sort column ascending\\\">Email</th>\\n                <th class=\\\"sorting\\\" tabindex=\\\"0\\\" aria-controls=\\\"example2\\\" rowspan=\\\"1\\\" colspan=\\\"1\\\" aria-label=\\\"CSS grade: activate to sort column ascending\\\">Phone</th>\\n                <th class=\\\"sorting\\\" tabindex=\\\"0\\\" aria-controls=\\\"example2\\\" rowspan=\\\"1\\\" colspan=\\\"1\\\" aria-label=\\\"CSS grade: activate to sort column ascending\\\">Action</th>\\n              </tr>\\n              </thead>\\n              <tbody>\\n              <tr role=\\\"row\\\" class=\\\"odd\\\" *ngFor=\\\"let item of (afterLoginState | async).agent.list; let i = index\\\">\\n                <td>{{i}}</td>\\n                <td>{{item.first_name}}</td>\\n                <td>{{item.last_name}}</td>\\n                <td>{{item.username}}</td>\\n                <td>{{item.email}}</td>\\n                <td>{{item.phone}}</td>\\n                <td>\\n                  <!-- Single button -->\\n                  <div class=\\\"btn-group\\\" [appDropdown]=\\\"'open'\\\">\\n                    <button type=\\\"button\\\" class=\\\"btn btn-default dropdown-toggle\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\">\\n                      Action <span class=\\\"caret\\\"></span>\\n                    </button>\\n                    <ul class=\\\"dropdown-menu\\\">\\n                      <li> <a (click)=\\\"onEditAgent(item.id)\\\"><i class=\\\"fa fa-pencil\\\" aria-hidden=\\\"true\\\"></i>Edit</a> </li>\\n                      <li *ngIf=\\\"item.profile_status == '1'\\\"> <a (click)=\\\"blockUser(item.id)\\\"><i class=\\\"fa fa-lock\\\" aria-hidden=\\\"true\\\"></i>Block</a> </li>\\n                      <li *ngIf=\\\"item.profile_status == '2'\\\"> <a (click)=\\\"UnblockUser(item.id)\\\"><i class=\\\"fa fa-unlock\\\" aria-hidden=\\\"true\\\"></i>Unblock</a> </li>\\n                    </ul>\\n                  </div>\\n                </td>\\n              </tr>\\n              </tbody>\\n              <tfoot>\\n              <tr>\\n                <th class=\\\"sorting\\\" tabindex=\\\"0\\\" aria-controls=\\\"example2\\\" rowspan=\\\"1\\\" colspan=\\\"1\\\" aria-label=\\\"Rendering engine: activate to sort column ascending\\\">#</th>\\n                <th class=\\\"sorting\\\" tabindex=\\\"0\\\" aria-controls=\\\"example2\\\" rowspan=\\\"1\\\" colspan=\\\"1\\\" aria-label=\\\"Rendering engine: activate to sort column ascending\\\">First Name</th>\\n                <th class=\\\"sorting_desc\\\" tabindex=\\\"0\\\" aria-controls=\\\"example2\\\" rowspan=\\\"1\\\" colspan=\\\"1\\\" aria-label=\\\"Browser: activate to sort column ascending\\\" aria-sort=\\\"descending\\\">Last Name</th>\\n                <th class=\\\"sorting\\\" tabindex=\\\"0\\\" aria-controls=\\\"example2\\\" rowspan=\\\"1\\\" colspan=\\\"1\\\" aria-label=\\\"Platform(s): activate to sort column ascending\\\">Username</th>\\n                <th class=\\\"sorting\\\" tabindex=\\\"0\\\" aria-controls=\\\"example2\\\" rowspan=\\\"1\\\" colspan=\\\"1\\\" aria-label=\\\"Engine version: activate to sort column ascending\\\">Email</th>\\n                <th class=\\\"sorting\\\" tabindex=\\\"0\\\" aria-controls=\\\"example2\\\" rowspan=\\\"1\\\" colspan=\\\"1\\\" aria-label=\\\"CSS grade: activate to sort column ascending\\\">Phone</th>\\n                <th class=\\\"sorting\\\" tabindex=\\\"0\\\" aria-controls=\\\"example2\\\" rowspan=\\\"1\\\" colspan=\\\"1\\\" aria-label=\\\"CSS grade: activate to sort column ascending\\\">Action</th>\\n              </tr>\\n              </tfoot>\\n            </table>\\n            </div>\\n            </div>\\n              <div class=\\\"row\\\">\\n                <div class=\\\"col-sm-5\\\">\\n                  <div class=\\\"dataTables_info\\\" id=\\\"example2_info\\\" role=\\\"status\\\" aria-live=\\\"polite\\\">Showing 1 to 10 of 57 entries</div>\\n                </div>\\n                <div class=\\\"col-sm-7 text-right\\\">\\n                  <div class=\\\"dataTables_paginate paging_simple_numbers\\\" id=\\\"example2_paginate\\\">\\n                    <ul class=\\\"pagination\\\">\\n                      <li class=\\\"paginate_button previous disabled\\\" id=\\\"example2_previous\\\">\\n                        <a href=\\\"#\\\" aria-controls=\\\"example2\\\" data-dt-idx=\\\"0\\\" tabindex=\\\"0\\\">Previous</a>\\n                      </li>\\n                      <li class=\\\"paginate_button active\\\">\\n                        <a href=\\\"#\\\" aria-controls=\\\"example2\\\" data-dt-idx=\\\"1\\\" tabindex=\\\"0\\\">1</a>\\n                      </li>\\n                      <li class=\\\"paginate_button \\\">\\n                        <a href=\\\"#\\\" aria-controls=\\\"example2\\\" data-dt-idx=\\\"2\\\" tabindex=\\\"0\\\">2</a>\\n                      </li>\\n                      <li class=\\\"paginate_button \\\">\\n                        <a href=\\\"#\\\" aria-controls=\\\"example2\\\" data-dt-idx=\\\"3\\\" tabindex=\\\"0\\\">3</a>\\n                      </li>\\n                      <li class=\\\"paginate_button \\\">\\n                        <a href=\\\"#\\\" aria-controls=\\\"example2\\\" data-dt-idx=\\\"4\\\" tabindex=\\\"0\\\">4</a>\\n                      </li>\\n                      <li class=\\\"paginate_button \\\">\\n                        <a href=\\\"#\\\" aria-controls=\\\"example2\\\" data-dt-idx=\\\"5\\\" tabindex=\\\"0\\\">5</a>\\n                      </li>\\n                      <li class=\\\"paginate_button \\\">\\n                        <a href=\\\"#\\\" aria-controls=\\\"example2\\\" data-dt-idx=\\\"6\\\" tabindex=\\\"0\\\">6</a>\\n                      </li>\\n                      <li class=\\\"paginate_button next\\\" id=\\\"example2_next\\\">\\n                        <a href=\\\"#\\\" aria-controls=\\\"example2\\\" data-dt-idx=\\\"7\\\" tabindex=\\\"0\\\">Next</a>\\n                      </li>\\n                    </ul>\\n                  </div>\\n                </div>\\n              </div>\\n            </div>\\n          </div>\\n          <!-- /.box-body -->\\n        </div>\\n        <!-- /.box -->\\n        <div class=\\\"msg-popup\\\">\\n          <p>This is a success msg!</p>\\n        </div>\\n      </div>\\n      <!-- /.col -->\\n    </div>\\n    <!-- /.row -->\\n  </section>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/tier5/Projects/web/3c/resources/assets/frontend/src/app/core/layout/inner-pages/agent/list-agent/list-agent.component.html\n// module id = ../../../../../src/app/core/layout/inner-pages/agent/list-agent/list-agent.component.html\n// module chunks = agent.module","import { Component, OnInit } from '@angular/core';\nimport { Observable } from 'rxjs/Observable';\nimport { Router } from '@angular/router';\nimport { Store } from '@ngrx/store';\n\nimport * as fromAfterLogin from '../../../store/after-login.reducers';\nimport * as AgentActions from '../../../store/agent/agent.actions';\n\n@Component({\n  selector: 'app-list-agent',\n  templateUrl: './list-agent.component.html',\n  styleUrls: ['./list-agent.component.css']\n})\nexport class ListAgentComponent implements OnInit {\n\n  /** Variable declaration */\n  afterLoginState: Observable<fromAfterLogin.FeatureState>;\n\n  /** Service injection */\n  constructor(private store: Store<fromAfterLogin.AfterLoginFeatureState>,\n              private router: Router) { }\n  /** Function to be executed when component initializes */\n  ngOnInit() {\n    this.store.dispatch(new AgentActions.GetAgentListAttempt());\n    this.afterLoginState = this.store.select('afterLogin');\n  }\n\n  /** Function to Edit Agent */\n  onEditAgent(id: number) {\n    this.router.navigate([ 'agent/edit/', id ]);\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/tier5/Projects/web/3c/resources/assets/frontend/src/app/core/layout/inner-pages/agent/list-agent/list-agent.component.ts"],"sourceRoot":"webpack:///"}