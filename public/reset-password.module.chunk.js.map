{"version":3,"sources":["/home/tier5/Projects/web/3c/resources/assets/frontend/src/app/core/auth/reset-password/reset-password-routing.module.ts","/home/tier5/Projects/web/3c/resources/assets/frontend/src/app/core/auth/reset-password/reset-password.component.css","/home/tier5/Projects/web/3c/resources/assets/frontend/src/app/core/auth/reset-password/reset-password.component.html","/home/tier5/Projects/web/3c/resources/assets/frontend/src/app/core/auth/reset-password/reset-password.component.ts","/home/tier5/Projects/web/3c/resources/assets/frontend/src/app/core/auth/reset-password/reset-password.module.ts"],"names":[],"mappings":"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","file":"reset-password.module.chunk.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { ResetPasswordComponent } from './reset-password.component'\n\nconst resetPasswordRoutes: Routes = [\n  { path: '', component: ResetPasswordComponent }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(resetPasswordRoutes)],\n  exports: [RouterModule]\n})\nexport class ResetPasswordRoutingModule { }\n\n\n\n// WEBPACK FOOTER //\n// /home/tier5/Projects/web/3c/resources/assets/frontend/src/app/core/auth/reset-password/reset-password-routing.module.ts","exports = module.exports = require(\"../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/tier5/Projects/web/3c/resources/assets/frontend/src/app/core/auth/reset-password/reset-password.component.css\n// module id = ../../../../../src/app/core/auth/reset-password/reset-password.component.css\n// module chunks = reset-password.module","module.exports = \"<div class=\\\"hold-transition register-page\\\">\\n  <div class=\\\"register-box\\\">\\n    <div class=\\\"register-logo\\\">\\n      <a [routerLink]=\\\"['/']\\\"><b>TM</b>SMS</a>\\n    </div>\\n\\n    <div class=\\\"register-box-body\\\">\\n      <p class=\\\"login-box-msg\\\">Reset Password</p>\\n\\n      <form [formGroup]=\\\"form\\\" (submit)=\\\"onResetPassword()\\\">\\n        <!-- Password -->\\n        <div class=\\\"form-group has-feedback\\\">\\n          <input type=\\\"password\\\"\\n                 class=\\\"form-control\\\"\\n                 placeholder=\\\"Password\\\"\\n                 formControlName=\\\"password\\\"\\n          >\\n          <span class=\\\"glyphicon glyphicon-lock form-control-feedback\\\"></span>\\n        </div>\\n        <div *ngIf=\\\"form.get('password').invalid && form.get('password').touched\\\">\\n          <div class=\\\"alert alert-danger\\\">\\n            <div *ngIf=\\\"form.get('password').hasError('required')\\\">\\n              Your Password is Required!\\n            </div>\\n            <div *ngIf=\\\"form.get('password').hasError('minlength')\\\">\\n              Your Password should be at least 6 Characters Long!\\n            </div>\\n          </div>\\n        </div>\\n\\n        <!-- Confirm Password -->\\n        <div class=\\\"form-group has-feedback\\\">\\n          <input type=\\\"password\\\"\\n                 class=\\\"form-control\\\"\\n                 placeholder=\\\"Retype Password\\\"\\n                 formControlName=\\\"conf_pass\\\"\\n          >\\n          <span class=\\\"glyphicon glyphicon-log-in form-control-feedback\\\"></span>\\n        </div>\\n        <div *ngIf=\\\"form.get('conf_pass').invalid && form.get('conf_pass').touched\\\">\\n          <div class=\\\"alert alert-danger\\\" >\\n            <div *ngIf=\\\"form.get('conf_pass').hasError('required')\\\">\\n              Confirm password is Required!\\n            </div>\\n            <div *ngIf=\\\"form.get('conf_pass').hasError('confirmPassword')\\\">\\n              Confirm Password did not Match!\\n            </div>\\n          </div>\\n        </div>\\n\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-xs-8\\\">\\n            <!--<div>-->\\n            <!--<input class=\\\"styled-checkbox\\\" id=\\\"styled-checkbox\\\" type=\\\"checkbox\\\" value=\\\"1\\\">-->\\n            <!--<label for=\\\"styled-checkbox\\\">I agree to the <a href=\\\"#\\\">terms</a></label>-->\\n            <!--</div>-->\\n          </div>\\n          <!-- /.col -->\\n          <div class=\\\"col-xs-4\\\">\\n            <button type=\\\"submit\\\"\\n                    class=\\\"btn btn-primary btn-block btn-flat\\\"\\n                    [disabled]=\\\"form.invalid\\\"\\n            >\\n              Submit\\n            </button>\\n          </div>\\n          <!-- /.col -->\\n        </div>\\n      </form>\\n    </div>\\n    <!-- /.form-box -->\\n  </div>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/tier5/Projects/web/3c/resources/assets/frontend/src/app/core/auth/reset-password/reset-password.component.html\n// module id = ../../../../../src/app/core/auth/reset-password/reset-password.component.html\n// module chunks = reset-password.module","import { AbstractControl, FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute } from '@angular/router';\nimport { Component, OnInit } from '@angular/core';\nimport { Store } from '@ngrx/store';\n\nimport * as AuthActions from '../../store/auth/auth.actions';\nimport * as fromApp from '../../store/core.reducers';\n\n@Component({\n  selector: 'app-reset-password',\n  templateUrl: './reset-password.component.html',\n  styleUrls: ['./reset-password.component.css']\n})\nexport class ResetPasswordComponent implements OnInit {\n\n  /** Variable declarations */\n  form: FormGroup;\n  id : string;\n\n  /** Service injection */\n  constructor (private formBuilder: FormBuilder,\n               private activatedRoute: ActivatedRoute,\n               private store: Store<fromApp.AppState>) { }\n\n  /** Function to be executed when component initializes */\n  ngOnInit () {\n    /** Getting id from url */\n    this.id = this.activatedRoute.snapshot.params['id'];\n    /** Forgot Password form initialization */\n    this.form = this.formBuilder.group({\n      'password': new FormControl(null, [Validators.required, Validators.minLength(6)]),\n      'conf_pass': new FormControl(null, Validators.required)\n    }, {validator: this.confirmPassword});\n  }\n\n  /** Custom confirm password validator */\n  confirmPassword = (control: AbstractControl): { [key: string]: boolean } => {\n    const pass = control.get('password');\n    const cnfPass = control.get('conf_pass');\n    if (!pass || !cnfPass) {\n      return null;\n    }\n    if (pass.value === cnfPass.value) {\n      return null;\n    } else {\n      control.get('conf_pass').setErrors({confirmPassword: true});\n      return {confirmPassword: true};\n    }\n  }\n\n  /** Function call to submit the reset password form */\n  onResetPassword () {\n    const obj = {\n      ...this.form.value,\n      id: this.id\n    };\n    this.store.dispatch(new AuthActions.ResetPasswordAttempt(obj));\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/tier5/Projects/web/3c/resources/assets/frontend/src/app/core/auth/reset-password/reset-password.component.ts","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms'\n\nimport { ResetPasswordComponent } from './reset-password.component';\nimport { ResetPasswordRoutingModule } from './reset-password-routing.module'\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    ResetPasswordRoutingModule\n  ],\n  declarations: [ResetPasswordComponent]\n})\nexport class ResetPasswordModule { }\n\n\n\n// WEBPACK FOOTER //\n// /home/tier5/Projects/web/3c/resources/assets/frontend/src/app/core/auth/reset-password/reset-password.module.ts"],"sourceRoot":"webpack:///"}